# SafeComm AI Cloud Run Service Definition
# 
# デプロイ方法:
# 1. PROJECT_ID, REGION, PROJECT_NUMBERを実際の値に置き換える
# 2. gcloud run services replace service.yaml --region=REGION
#
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: chottomatte-ai
  annotations:
    run.googleapis.com/ingress: all
spec:
  template:
    metadata:
      annotations:
        # WebSocket対応のため、タイムアウトを長めに設定
        run.googleapis.com/timeout: "3600s"
        # オートスケーリング設定
        autoscaling.knative.dev/minScale: "0"
        autoscaling.knative.dev/maxScale: "2"
        # CPUの割り当て設定
        run.googleapis.com/cpu-throttling: "false"
    spec:
      containerConcurrency: 1000
      timeoutSeconds: 3600
      serviceAccountName: chottomatte-service@llm-dx-test-387511.iam.gserviceaccount.com
      containers:
      - name: chottomatte-ai
        image: asia-northeast1-docker.pkg.dev/llm-dx-test-387511/chottomatte/app:latest
        ports:
        - name: http1
          containerPort: 3001 # nginxがリッスンするポート
        env:
        - name: NODE_ENV
          value: "production"
        - name: GOOGLE_CLOUD_PROJECT
          value: "llm-dx-test-387511"
        - name: GOOGLE_CLOUD_LOCATION
          value: "us-central1"
        - name: GOOGLE_GENAI_USE_VERTEXAI
          value: "True"
        - name: BACKEND_WS_URL
          value: "dummy"  # nginx経由のWebSocket URL
        - name: BACKEND_PORT
          value: "8080"
        - name: FRONTEND_PORT
          value: "3000"  # Next.js internal port
        resources:
          limits:
            cpu: "2000m"
            memory: "4Gi"
        startupProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 30
          timeoutSeconds: 3
          periodSeconds: 10
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 60
          timeoutSeconds: 3
          periodSeconds: 30
          failureThreshold: 3
  traffic:
  - percent: 100
    latestRevision: true
